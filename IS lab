/*  HILL CIPHER  */


#include<stdio.h>
#include<conio.h>
#include<string.h>
int main()
{
    unsigned int a[3][3]={{6,24,1},{13,16,10},{20,17,15}};
    unsigned int b[3][3]={{8,5,10},{21,8,21},{21,12,8}};
    int i,j,t=0;
    unsigned int c[20],d[20];
    char msg[20];
    printf("enter plain text :");
    scanf("%s",msg);
    for(i=0;i<strlen(msg);i++)

    {
        c[i]=msg[i]-65;
        printf("%d",c[i]);
    }
    for(i=0;i<3;i++)
    {
        t=0;
        for(j=0;j<3;j++)
        {
            t=t+(a[i][j]*c[j]);
        }
        d[i]=t%26;
    }
    printf("\n encrypted cipher text :");
    for(i=0;i<3;i++)
    printf(" %c",d[i]+97);
    for(i=0;i<3;i++)
    {
        t=0;
        for(j=0;j<3;j++)
        {
            t=t+(b[i][j]*d[j]);
        }
        c[i]=t%26;
    }
    printf("\n decryption cipher text :");
    for(i=0;i<3;i++)
    printf("%c",c[i]+65);
    return 0;
}
output:-
enter plain text :ACT
0219
 encrypted cipher text : p o h
 decryption cipher text :ACT

/* RAIL FENCH   */
 #include<stdio.h>
#include<string.h>
int main()
{
    int i,j,k,l;
    char a[20],c[20],d[20];
    printf("\n\t\t RAIL FENCE TECHNIQUE");
    printf("\n\n enter the input string :");
    gets(a);
    l=strlen(a);
    /*ciphering*/
   for(i=0,j=0;i<l;i++)
    {
        if(i%2==0)
        c[j++]=a[i];
    }
    for(i=0;j<l;i++)
    {
        if(i%2==1)
        c[j++]=a[i];
    }
    for(i=0;i<l;i++)
    {
        if(i%2==1)
        c[j++]=a[i];
    }
    c[j]='\0';
    printf("\n cipher text after applying rail fence:");
    printf("\n%s",c);
    /*Deciphering*/
    if(1%2==0)
    k=1/2;
    else
    k=(1/2)+1;
    for(i=0,j=0;i<k;i++)
    {
        d[j]=c[i];
        j=j+2;
    }
    for(i=k,j=1;i<l;i++)
    {
        d[j]=c[i];
        j=j+2;
    }
    d[l]='\0';
    printf("\n Text after decryption :");
    printf("%s",d);
    return 0;
}
output:-
 enter the input string :ACT

 cipher text after applying rail fence:
ATCC
 Text after decryption :AT


/*VIGENER CIPHER  */
#include<stdio.h>
#include<ctype.h>
#include<string.h>
void encipher();
void decipher();
void main()
{
  int choice;
  while(1)
  {
        printf("\n 1.Encrypt text");
        printf("\t 2.Decrypt text");
        printf("\t 3.exit");
        printf("\n\nEnter your choice:");
        scanf("%d",&choice);
        if(choice == 3)
        exit(0);
        else if(choice == 1)
        encipher();
        else if(choice == 2)
        decipher();
        else
        printf("please enter valid option");
   }
}
void encipher()
{   
    unsigned int i,j;
    char input[50],key[10];
    printf("\n\nEnter plain text:");
    scanf("%s",input);
    printf("\nEnter key value:");
    scanf("%s",key);
    printf("\nResultant Cipher text:");
    for(i=0,j=0;i<strlen(input);i++,j++)
    {
       if(j>=strlen(key))
    {
      j=0;
    }
    printf("%c",65+(((toupper(input[i])-65)+(toupper(key[j])-65))%6));
    }
}
void decipher()
{
     unsigned int i,j;
    char input[50],key[10];
    int value;
    printf("\n\nEnter cipher text:");
    scanf("%s",input);
    printf("\nEnter key value:");
    scanf("%s",key);
    for(i=0,j=0;i<strlen(input);i++,j++)
    {
       if(j>=strlen(key))
    {
      j=0;
    }
    value = (toupper(input[i])-64)-(toupper(key[j])-54);
    if(value<0)
    {
     value = value * -1;
    }
    printf("%c",65 + (value % 26));
}
return 0;
}
output:-
click numbers

/*  NETWORK COMANDS  */
1)NS LOOKUP
2)NMAP
3)PING
4)IPCONFIG
5)TRACET
6)NETSAT
7)NET SH
8)ARP
9)RELEASE

/*  RSA  */
#include<stdio.h>
#include<stdlib.h>
#include<math.h>
#include<string.h>
long int p,q,n,t,flag,e[100],d[100],temp[100],j,m[100],en[100],i;
char msg[100];
int prime(long int);
void ce();
long int cd(long int);
void encrypt();
void decrypt();
int main()
{
  printf("\n ENTER PRIME NUMBER\n");
  scanf("%ld",&p);
  flag=prime(p);
  if(flag==0)
   {
        printf("\nWRONG INPUT\n");
   }
   printf("\nnn ENTER ANOTHER PRIME NUMBER\n");
   scanf("%ld",&q);
  flag=prime(q);
  if(flag==0||p==q)
   {
        printf("\nWRONG INPUT\n");
   }
printf("\nENTER MESSAGE\n");
fflush(stdin);
scanf("%s",msg);
for(i=0;msg[i]!=NULL;i++)
m[i]=msg[i];
n=p*q;
t=(p-1)*(q-1);
ce();
printf("\nPOSSIBLE VALUES OF e AND  d ARE\n");
for(i=0;i<j-1;i++)
printf("\n%ld\t%ld",e[i],d[i]);
encrypt();
decrypt();
}
int prime(long int pr)
{
 int i;
 j=sqrt(pr);
 for(i=2;i<=j;i++)
 {
  if(pr%i==0)
  return 0;
 }
  return 1;
 }
  void ce()
  {
   int k;
   k=0;
   for(i=2;i<t;i++)
  {
    if(t%i==0)
    continue;
    flag=prime(i);
    if(flag==1&&i!=p&&i!=q)
   {
    e[k]=i;
    flag=cd(e[k]);
    if(flag>0)
    {
     d[k]=flag;
     k++;
    }
     if(k==9)
     break;
    } } }
    long int cd(long int x)
    {
     long int k=1;
     while(1)
     {
      k=k+t;
      if(k%x==0)
      return(k/x);
      } }
void encrypt() {
      long int pt,ct,key=e[0],k,len;
      i=0;
      len=strlen(msg);
       while(i!=len) {
    pt=m[i];
    pt=pt-96;
    k=1;
    for(j=0;j<key;j++)
    { k=k*ct;
      k=k&n;
     }
     pt=k+96;
     en[i]=pt;
     i++;
     }
     en[i]=-1;
printf("\n THE ENCRYPTED MESSAGE IS\n");
for(i=0;en[i]!=-1;i++)
printf("%c",en[i]);
}
void decrypt() {
      long int pt,ct,key=d[0],k;
      i=0;
       while(en[i]!=-1) {
    ct=temp[i];
    k=1;
    for(j=0;j<key;j++)
    {
      k=k*ct;
      k=k&n;
     }
     pt=k+96;
     m[i]=pt;
     i++;
     }
     m[i]=-1;
     printf("\n THE DECRYPTED MESSAGE IS\n");
     for(i=0;m[i]!=-1;i++)
     printf("%c",m[i]);
}



/*  DIFFIE HELLMAN KEY EXCHANGE  */
#include<stdio.h>
long long int power(int a,int b, int mod)
{
    long long int t;
    if(b==1)
    return a;
    t=power(a,b/2,mod);
    if(b%2==0)
    return(t*t)%mod;
    else
    return(((t*t)%mod)*a)%mod;
}
long int caluclateKey(int a,int x,int n)
{
    return power(a,x,n);
}
int  main()
{
    int n,g,x,a,y,b;
    printf("Enter the value of n and g :");
    scanf("%d%d",&n,&g);
     printf("Enter the value of x for the first person:");
     scanf("%d",&x);
     a=power(g,x,n);
     printf("Enter the value of y for the second person:"); 
     scanf("%d",&y);
     b=power(g,y,n);
     printf("Key for the first person is :% lld\n",power(b,x,n));
     printf("Key for the second person is :% lld\n",power(a,y,n));
     return 0;
}
output:-
Enter the value of n and g :3 4
Enter the value of x for the first person:5
Enter the value of y for the second person:6
Key for the first person is : 1
Key for the second person is : 1



/*  GOOGLE DORKS  */
1)allintext:username filetype:log
2)filetype:xls inurl:"email.xlsx"
3)inurl:top.htm inurl:current time
4)inurl:"webcamxp5"
5)inurl:"lvappl.htm"
6)inurl:/proc/self/cwd
5)intitle:"index of"inurl:ftp
6)filetype:log username putty



/*   FIRE WALLS  */

1)turn on windows firewall
2)block all income firewall connections,includeing those in the list of allowed program 
3)turn off windows firewall
4)block or allow programs through the windows firewall
5)how to open a port in windows firewall




/*    metaspolit   */
metaspolit is a pentersraction testing framework that makes hacking simple it essentail  tool for many attackers and defenders point metalspolit at your target
METASPOLIT FRAMEWORK
1)DATA :-contain ealiablites files for storing 
2)TOOLS:-contain commands utilites including pluging
3)SCRIPT:-contains meterpreter script
4)MODULES:-contains accusits mst modules
5)PLUGING
6)LIB
7)DOCUMENTAION
METASPOLT USED :-defination
